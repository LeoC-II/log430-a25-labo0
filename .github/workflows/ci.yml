name: example_CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dépot
        uses: actions/checkout@v3

      - name: Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Rouler les tests unitaires
        run: |
          cd src
          python3 -m pytest

  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Install sshpass
        run: sudo apt-get install -y sshpass
      - name: SSH into server and deploy application
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            set -e
            cd /var/www/your-app
          
            git config --global credential.helper store
            echo 'https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}' > ~/.git-credentials
            git pull origin master
          
            CONTAINER_ID=\$(docker ps -q --filter ancestor=labo0-calculator:latest)
            if [ -n \"\$CONTAINER_ID\" ]; then
              docker stop \$CONTAINER_ID
              docker rm \$CONTAINER_ID
            fi
          
            docker build -t labo0-calculator .
            docker run -d --restart always --name labo0-calculator-container -p 80:80 labo0-calculator
          "